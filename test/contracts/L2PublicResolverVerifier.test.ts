import { FakeContract, smock } from "@defi-wonderland/smock";
import { BedrockProofVerifier, BedrockProofVerifier__factory } from "ccip-resolver/dist/typechain";
import { expect } from "chai";
import { BigNumber } from "ethers";
import { ethers } from "hardhat";
import { L2PublicResolverVerifier, L2PublicResolverVerifier__factory, L2PublicResolver__factory } from "../../typechain";
import { RESOLVER_WTIH_ABI_CALLDATA } from "./RESOLVE_WITH_ABI_CALLDATA";

describe.only("L2PublicResolverVerifier", () => {
    it("resolveWithAddress", async () => {
        const [owner] = await ethers.getSigners();
        const bedrockProofVerifier: FakeContract<BedrockProofVerifier> = (await smock.fake<BedrockProofVerifier>(
            "ccip-resolver/contracts/verifier/optimism-bedrock/IBedrockProofVerifier.sol:IBedrockProofVerifier"
        )) as FakeContract<BedrockProofVerifier>;

        bedrockProofVerifier.getProofValue.returns("0x8111dfd23b99233a7ae871b7c09ccf0722847d89000000000000000000000028");

        const l2PublicResolverVerifier: L2PublicResolverVerifier = await new L2PublicResolverVerifier__factory()
            .connect(owner)
            .deploy(owner.address, "", "", 420, bedrockProofVerifier.address, "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0");
        const cd =
            "0xde63d8ef00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000ae00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000208111dfd23b99233a7ae871b7c09ccf0722847d8900000000000000000000002800000000000000000000000000000000000000000000000000000000000000000000000000000000000000009fe46736679d2d9a65f0992f2272de9f3c7fa6e00000000000000000000000000000000000000000000000000000000000000020c7e566458335df7c0cae78a288e97c30b00169af9bb311f36766720f52b7acd200000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000013000000000000000000000000000000000000000000000000000000000000000008e0570195c579d3746d6eaa28abb3f14abf7e8b4e95ece7afc2f9e47ce555228ed4baae3a927be3dea54996b4d5899f8c01e7594bf50b17dc1e741388ce3d12e4884829480f961fe801c9eab7aee1fce04d0c6e6e96304a9373ae468b661a7900000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000629f90626b90214f90211a063343b962cf78db7f741ae6dedc5f83d99f125b11f14c13df46bfa01f8cd70b4a015d9884596ac11c1061a2aa08664ee288e8c00733dcee73d8874c2ccee351ccca0f81e937e2d5ff7c1f8a392103e8125cd54808452f10bafdc7dbb3f0fe6c4eb5ba05df0e508f14ebabad3017ea830a4b056afbcc5c958436a4ef8ca8e0ce011bff2a0a9053f5e6f228993ed61b5653cc0b10f080ec0796953f4c031c2fdaf19891293a06e6d4b6c7a781500ca3288d65e40c36746a332e4b42ac409447cf3c68638619ea004873662e32a2c7b56263c834fa312775fca35d684a9441bebe0d065f5103671a074714750e1d267cd6090763f6ed4b173cc48d26a4a79a1dd53af4e3a9b3430bea01da20a0d8b5e190f30bf9d2ad91b2b949a06aea7b29d26e9e3319efce21ee287a002dcf5f65bed288e36dff7c5f125e6a1661536fd2733f8c4c66d66a190bc5ee6a01f5b7ae3f9169e9781ca2bbcbde9fa9306d4c4187fc49ba6b6e6b23d5e949828a02910c1dc3fe0c125f7a5ec0ad1d108a0c65f65ee94a63d10298da93439f8e3c1a0ad5ccb80e68c6f36226137f8846944f3edda206e847ce3d89312186dacc697fda0f503a03e5f8d8c570949d4bbdfa6a2c0b05e43265d814e9a7f60c247f86bfc57a0187dd8b3b8b5e754bfb2a4b76d7e8f2b0dd8e32d475bcc22aaca4e4fe6314ae5a04e70f3b203f5976a5330ead9a032414f5882214ea35a4977ea42866138bc811e80b90214f90211a0d822fcda4fe151c4f2064581d51e5ed328746437ba625f33e65ec2c8c7eba21aa0f662289e4896086e09dcb07f18a2094f1f363fdda86c4274225c8fcc07f7829ea0a4aab2b2e4a8a0180ac476ab9a82accc8346b05956b9a8ddb1d54f81ffd21b58a0e29783ba9b46fa0953dc806e6178905500e6391efcbc690150bddea9fca5a16da0c7b8e7045b33c1f238f958b23da7f56230d6660f53c98ad1cda33b65f89b2c30a02911b276f4ddca7160420f9762c4e88c54daac0510c853291ad84a19f1e4d738a02dcbcdafd3ca410c40b27eb12bbada85f669525ac421ec238eedffc1af6682f0a0f372795b70986564542ae8e7fa34dab8254e3aa5066371de1d996625acbb3f5aa0469555c6ed4d45726b7ec3a49da33270c63441e26637afe4b516d823a1a3e9cca0e0d7e87d380fc47f7343c164389a5575249c0e2caf6832530a9aee80317ab6bda0c6aac78caea92e093d0bf7f5435c7d7d5d431fb7dcc164cc97fa9c81dfe660ada086266fdae49d7402035874ba3415faf0b122e3505cac9918bcdda5aeee8f6776a071fdba718a53a53fc6fa3c257004872055e63500cec3fbd2ea10d2f754988746a04ded84487206ab7ecdc06c4becf4f1fab099a34c79176c2236a8861189a4e516a05d77c140426669a57e2bb45a5cd1ff5ca3a3b31f2e62a787dd2543f48bf0b995a068f06f0af8adaacd27c0a5d19addd50994ce29e6420ea4f0cd8e956e06b5612180b90114f9011180a0b018aba825122f4555c6174cab9fc3276a6b70428735d33b6fbe7c597a59914780a0a2f7ffc069829cff1d8e4a969167598b3e46d5149e80934c26475d12d2272dfda08c4ef1826dd158521afdecbed47ceb16b90dbc17f3aeee004c8fca0edc48181b8080a0988265144dc92519e0a4e9ee4d629022b47a9996aac1aca5db472353b43a57f1a0ce7516edb303a37049b66673cffb8720e360d237b4fa8cb46b5716d7a1dda4c18080a02aa926323a8dbf542712191637088ccc6b6964eef3435b8142c6c342ef13571da054ee670c1c6864a7bfa9e8af8393db0b18aa34ccc057050ba4eb46e910ade7548080a090d39acd37397ec1eaebd2bc3c9a135deddaef827c3f946ddacdbda9a230fefc80b873f8718080a08f17f0effe21da2c9ab16a179bb0971bd0de6510b8228699794cf808ceabc7b6808080a01066dad02351c348c4746e4ba1c1ff732c46a13b2b2e4d0bc7db2be9459befc4808080808080a0564629cac7ad1b80555d8ca148c3927b085caeac7641db74b2735202706f9375808080b86af8689f200e45164e07e0e4df7165de40d5863fb7b8ece896a164bf57a134287c68f5b846f8440180a0c7e566458335df7c0cae78a288e97c30b00169af9bb311f36766720f52b7acd2a0ceca8646f359ce8d696e0982a4bc9fab4feb6fe662db4cf5ec9549fc80ba682e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020bd024851358d849da1dcd5a48a376dd37c888ba0cd8977b94dbb2a8a624a0e82000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001e1f901deb90194f90191a0aa0cd6e58016971a49d0cbb059decd3757f02549142b0c519730e0fa3253f5c9a0cdd5ca9dcbc532146838bf3eab2717959c7dbf0e82ca2984169a01f9bb99dac780a0541a139f7d5fd9639a689cd5ab873922214d60691804f4a142f5a0c344507c4280a0d41a0a711a3d8e65ce6e044d76b8e345c7c096af8e4835a4f1b930e320f6c5e7a0a25bbfc1448c34a90cea4b5589f24440c8344d841a4559c1d4356ce50f555eaca084c1f3a6482ee7fa37c0d0585b8c829e40727b4085f05432a20e7086bc470bd1a0d1e51e898af9970b20cff10560168c6ecff410e9b94dc98c86282f32b9b791f5a0c0bcfbd79003cdf8826c54d612d0dafa16c30672e3b8be7ea95c19d5301e5141a002a550cdaf3c7d007462bd6fcb54619074d686f9b208316630835d2176b34dce80a044edc48c3aa2bcb54889d04b07d0209efd71ac3ad701615417b6cf13bc3191c2a012f0b9ea6a71a919c8988b28310aad8c1ab47a6096a5a76f3580d5b16cf6938980a088317d9b259beaebb29e57da14faa93720333344816fcd6f81382cfce091583880b845f843a033e88ac1209294d11c91b0a3825872922242b287f8d792ae3dbc68dcc179c2e6a1a08111dfd23b99233a7ae871b7c09ccf0722847d89000000000000000000000028000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000144f8c30f63000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000b05616c696365036574680000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000243b3b57de787192fc5378cc32aa956ddfdedbf26b24e8d78e40109add0eea2c1a012c3dec0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000148111dfd23b99233a7ae871b7c09ccf0722847d8900000000000000000000000000000000000000000000000000000000000000000000000000000000";

        const [response, extraData] = new ethers.utils.Interface([
            "function resolveWithAddress(bytes calldata response, bytes calldata extraData) public view returns (address)",
        ]).decodeFunctionData("resolveWithAddress", cd);

        const res = await l2PublicResolverVerifier.resolveWithAddress(response, extraData);
        expect(ethers.utils.getAddress(res)).to.eq(ethers.utils.getAddress("0x8111dfd23b99233a7ae871b7c09ccf0722847d89"));
    });

    it.only("resolveWithProof", async () => {
        const [owner] = await ethers.getSigners();
        const bedrockProofVerifier: FakeContract<BedrockProofVerifier> = (await smock.fake<BedrockProofVerifier>(
            "ccip-resolver/contracts/verifier/optimism-bedrock/IBedrockProofVerifier.sol:IBedrockProofVerifier"
        )) as FakeContract<BedrockProofVerifier>;

        bedrockProofVerifier.getProofValue.returnsAtCall(0, "0x");
        bedrockProofVerifier.getProofValue.returnsAtCall(1, "0x7b227075626c69635369676e696e674b6579223a2230656b6749334342773269584e5875645264425148694f614d704739627671394a736532366442757475673d222c227075626c6963456e6372797074696f6e4b6579223a225672642f6554416b2f6a5a622f77354c34303879446a4f4f3575704e4644476474306c7957526a6642456b3d222c2264656c69766572795365727669636573223a5b22666f6f2e646d33225d7d");
        console.log("enc hash ", ethers.utils.defaultAbiCoder.encode(["uint256"], [0]));
        console.log("bn zero ", BigNumber.from(0).toHexString());

        const l2PublicResolverVerifier: L2PublicResolverVerifier = await new L2PublicResolverVerifier__factory()
            .connect(owner)
            .deploy(owner.address, "", "", 420, bedrockProofVerifier.address, "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0");
        const cd =
            "";

        const [response, extraData] = new ethers.utils.Interface([
            "function resolveWithProof(bytes calldata response, bytes calldata extraData) public view returns (address)",
        ]).decodeFunctionData("resolveWithProof", cd);


        const profile = {
            publicSigningKey: "0ekgI3CBw2iXNXudRdBQHiOaMpG9bvq9Jse26dButug=",
            publicEncryptionKey: "Vrd/eTAk/jZb/w5L408yDjOO5upNFDGdt0lyWRjfBEk=",
            deliveryServices: ["foo.dm3"],
        };
        const resBytes = await l2PublicResolverVerifier.resolveWithProof(response, extraData);
        expect(ethers.utils.toUtf8String(resBytes)).to.equal(JSON.stringify(profile));
    });

    it("resolveWithAbi", async () => {
        const [owner] = await ethers.getSigners();
        const bedrockProofVerifier: FakeContract<BedrockProofVerifier> = (await smock.fake<BedrockProofVerifier>(
            "ccip-resolver/contracts/verifier/optimism-bedrock/IBedrockProofVerifier.sol:IBedrockProofVerifier"
        )) as FakeContract<BedrockProofVerifier>;

        const expectedAbi = new BedrockProofVerifier__factory().interface.format(ethers.utils.FormatTypes.json);

        bedrockProofVerifier.getProofValue.returns(ethers.utils.toUtf8Bytes(expectedAbi.toString()));

        const l2PublicResolverVerifier: L2PublicResolverVerifier = await new L2PublicResolverVerifier__factory()
            .connect(owner)
            .deploy(owner.address, "", "", 420, bedrockProofVerifier.address, "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0");
        const cd = RESOLVER_WTIH_ABI_CALLDATA;

        const [response, extraData] = new ethers.utils.Interface([
            "function resolveWithAbi(bytes calldata response, bytes calldata extraData) public view returns (address)",
        ]).decodeFunctionData("resolveWithAbi", cd);

        const resBytes = await l2PublicResolverVerifier.resolveWithAbi(response, extraData);
        console.log(resBytes);
        const [contentType, abi] = ethers.utils.defaultAbiCoder.decode(["uint256", "bytes"], resBytes);

        expect(BigNumber.from(contentType).toNumber()).to.equal(1);
        expect(ethers.utils.toUtf8String(abi)).to.equal(expectedAbi.toString());
    });
});
